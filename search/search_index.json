{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"django-typescript","title":"Home"},{"location":"#django-typescript","text":"","title":"django-typescript"},{"location":"python/interface/","text":"Interfaces The Interface defines what ModelType 's and ObjectType 's will be exposed on the TypeScript side. Two things are mandatory: The subclass of interface.Interface is also called Interface A transpile_dest keyword argument must be supplied to the subclasses class init arguments. This tells the transpiler where the transpiled code should go. from django_typescript import interface from .models import SomeModel class Interface(interface.Interface, transpile_dest='src/...'): some_model = interface.ModelType(model_cls=SomeModel)","title":"Interface"},{"location":"python/interface/#interfaces","text":"The Interface defines what ModelType 's and ObjectType 's will be exposed on the TypeScript side. Two things are mandatory: The subclass of interface.Interface is also called Interface A transpile_dest keyword argument must be supplied to the subclasses class init arguments. This tells the transpiler where the transpiled code should go. from django_typescript import interface from .models import SomeModel class Interface(interface.Interface, transpile_dest='src/...'): some_model = interface.ModelType(model_cls=SomeModel)","title":"Interfaces"},{"location":"python/model-types/","text":"Model Types The ModelType class is used to specify a Django Model that will be transpiled to a TypeScript representation. It creates the views and url patterns necessary to excute model logic via TypeScript. The views correspond to the following actions: Get Create Update Delete List (and filter) Class Based Definition from django_typescript import interface from myapp.models import User class UserModelType(interface.ModelType, model_cls=User): pass class Interface(interface.Interface): users = UserModelType.as_type() Inline Definition from django_typescript import interface from myapp.models import User class Interface(interface.Interface): users = interface.ModelType(model_cls=User)","title":"Model Types"},{"location":"python/model-types/#model-types","text":"The ModelType class is used to specify a Django Model that will be transpiled to a TypeScript representation. It creates the views and url patterns necessary to excute model logic via TypeScript. The views correspond to the following actions: Get Create Update Delete List (and filter)","title":"Model Types"},{"location":"python/model-types/#class-based-definition","text":"from django_typescript import interface from myapp.models import User class UserModelType(interface.ModelType, model_cls=User): pass class Interface(interface.Interface): users = UserModelType.as_type()","title":"Class Based Definition"},{"location":"python/model-types/#inline-definition","text":"from django_typescript import interface from myapp.models import User class Interface(interface.Interface): users = interface.ModelType(model_cls=User)","title":"Inline Definition"},{"location":"python/object-types/","text":"Object Types","title":"Object Types"},{"location":"python/object-types/#object-types","text":"","title":"Object Types"}]}